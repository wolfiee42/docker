version: '3.8'

# services

# 1. backend
services: 
  backend:
    build: 
      context: ./api
      dockerfile: Dockerfile
    ports: 
      - "4003:8080"
    environment:
      - MONGO_URL=mongodb://mongo:27017/api-db
    volumes:
      - ./api:/app
    networks:
      - api-network


# 2. mongo
  db-mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - api-network
    volumes:
      - db-mongo:/data/db
    

# 3. mongo-express
  express-mongo:
    image: mongo-express:latest
    ports: 
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=db-mongo
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=password
    networks:
      - api-network
    volumes:
      - db-mongo:/data/db
    depends_on:
      - db-mongo


# 4. postgres
  db-postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    networks:
      - api-network
    volumes: 
      - db-postgres:/var/lib/postgresql/data

# 5. pgadmiin
  db-pgadmin:
    image: dpage/pgadmin4:latest
    ports: 
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=password
    networks:
      - api-network
    volumes:
      - db-postgres:/var/lib/postgresql/data
    depends_on:
      - db-postgres

# 6. redis
  db-redis:
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"
      - "8001:8001"
    environment:
      - REDIS_ARGS=--save 900 1
    networks:
      - api-network
    volumes:
      - db-redis:/var/lib/redis-stack
    depends_on:
      - db-postgres
    

# 7. rabbitmq
  db-rabbitmq:
    image: rabbitmq:3.8-management
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - api-network
    volumes:
      - db-rabbitmq:/var/lib/rabbitmq



 
# networks
networks:
  api-network:
    driver: bridge

# volumes
volumes:
  db-mongo:
  db-postgres:
  db-redis:
  db-rabbitmq:
 